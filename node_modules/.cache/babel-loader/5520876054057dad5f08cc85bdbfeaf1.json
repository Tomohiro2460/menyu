{"ast":null,"code":"var _jsxFileName = \"/Users/nishimuratomohiro/Capstone2/capstone2/menyu/src/components/Layout/EditRestaurant.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react/cjs/react.development';\nimport Storage from '@aws-amplify/storage';\nimport API from '@aws-amplify/api';\nimport { graphqlOperation } from '@aws-amplify/api-graphql';\nimport { updateRestaurant } from '../../graphql/mutations';\nimport { v4 as uuid } from 'uuid';\nimport classes from './EditRestaurant.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditRestaurant = props => {\n  _s();\n\n  const [logoEditorOpened, setLogoEditorOpened] = useState(false);\n  const [nameEditorOpened, setNameEditorOpened] = useState(false);\n  const [nameEditted, setNameEditted] = useState('');\n  const [logoEditted, setLogoEditted] = useState(null);\n  console.log('rendering EditRestaurant');\n  useEffect(() => {}, []);\n\n  const EditNameButtonClickHandler = () => {\n    setNameEditorOpened(true);\n  };\n\n  const EditLogoButtonClickHandler = () => {\n    setLogoEditorOpened(true);\n  };\n\n  const NameChangeHandler = event => {\n    setNameEditted(event.target.value);\n  };\n\n  const LogoChangeHandler = event => {\n    setLogoEditted(event.target.files[0]);\n  };\n\n  const onNameEditConfirm = async () => {\n    if (nameEditted === '') {\n      return;\n    }\n\n    const inputData = {\n      id: props.restaurant.id,\n      name: nameEditted\n    };\n    console.log('onNameEditConfirm:', nameEditted);\n    console.log('restaurant id:', props.restaurant.id); // update \n\n    try {\n      await API.graphql(graphqlOperation(updateRestaurant, {\n        input: inputData\n      }));\n      props.restaurantSetter(prevRestaurant => {\n        return { ...prevRestaurant,\n          name: nameEditted\n        };\n      });\n      console.log('onNameEditConfirm Finished');\n    } catch (err) {\n      console.log('error updating restaurant name:', err);\n    }\n\n    setNameEditorOpened(false);\n  };\n\n  const onLogoEditConfirm = async () => {\n    if (!logoEditted) {\n      return;\n    }\n\n    const extension = logoEditted.name.split(\".\")[1];\n    const {\n      type: mimeType\n    } = logoEditted;\n    const key = `${uuid()}${props.restaurant.name}.${extension}`;\n    const url = `https://${props.bucket}.s3.${props.region}.amazonaws.com/public/${key}`;\n    const inputData = {\n      id: props.restaurant.id,\n      logo: url\n    }; //delete prev logo from bucket\n\n    try {\n      const deletedKey = props.restaurant.logo.replace(`https://${props.bucket}.s3.${props.region}.amazonaws.com/public/`, '');\n      await Storage.remove(deletedKey);\n    } catch (err) {\n      console.log('error deleting logo:', err);\n    } // update \n\n\n    try {\n      await Storage.put(key, logoEditted, {\n        contentType: mimeType\n      });\n      await API.graphql(graphqlOperation(updateRestaurant, {\n        input: inputData\n      }));\n      props.restaurantSetter(prevRestaurant => {\n        //return {name: prevRestaurant.name, logo: url}\n        return { ...prevRestaurant,\n          logo: url\n        };\n      });\n    } catch (err) {\n      console.log('error updating restaurant logo:', err);\n    }\n\n    setLogoEditorOpened(false);\n  };\n\n  const onNameEditCancel = () => {\n    setNameEditorOpened(false);\n    setNameEditted('');\n  };\n\n  const onLogoEditCancel = () => {\n    setLogoEditorOpened(false);\n    setLogoEditted(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.editRestaurant,\n    children: [nameEditorOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.backdrop,\n        onClick: onNameEditCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.editorContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.editorText,\n          children: \"Restaurant Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.editorInputArea,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.editorInput,\n            type: \"text\",\n            placeholder: props.restaurant.name,\n            onChange: NameChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.editorButton,\n            onClick: onNameEditConfirm,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: classes.editorButton,\n            onClick: onNameEditCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), logoEditorOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.backdrop,\n        onClick: onLogoEditCancel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.editorContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"New Logo: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: LogoChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogoEditConfirm,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogoEditCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.text,\n        children: \"Your Restaurant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.editArea,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.nameArea,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.restaurantName,\n            children: \"Restaurant Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.name,\n            children: props.restaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.nameButton,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.button,\n              onClick: EditNameButtonClickHandler,\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          size: \"1\",\n          color: \"#6B2200\",\n          className: classes.line\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.logoArea,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.logoText,\n            children: \"Restaurant Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.logo,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: classes.logosrc,\n              src: props.restaurant.logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.logobutton,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.button,\n              onClick: EditLogoButtonClickHandler,\n              children: \"edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditRestaurant, \"n1G5ihtMxAAuSQmF7sW95my79Bk=\");\n\n_c = EditRestaurant;\nexport default EditRestaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditRestaurant\");","map":{"version":3,"sources":["/Users/nishimuratomohiro/Capstone2/capstone2/menyu/src/components/Layout/EditRestaurant.js"],"names":["React","useEffect","useState","Storage","API","graphqlOperation","updateRestaurant","v4","uuid","classes","EditRestaurant","props","logoEditorOpened","setLogoEditorOpened","nameEditorOpened","setNameEditorOpened","nameEditted","setNameEditted","logoEditted","setLogoEditted","console","log","EditNameButtonClickHandler","EditLogoButtonClickHandler","NameChangeHandler","event","target","value","LogoChangeHandler","files","onNameEditConfirm","inputData","id","restaurant","name","graphql","input","restaurantSetter","prevRestaurant","err","onLogoEditConfirm","extension","split","type","mimeType","key","url","bucket","region","logo","deletedKey","replace","remove","put","contentType","onNameEditCancel","onLogoEditCancel","editRestaurant","backdrop","editorContainer","editorText","editorInputArea","editorInput","editorButton","content","text","editArea","nameArea","restaurantName","nameButton","button","line","logoArea","logoText","logosrc","logobutton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from 'react/cjs/react.development';\n\nimport Storage from '@aws-amplify/storage';\nimport API from '@aws-amplify/api';\nimport { graphqlOperation } from '@aws-amplify/api-graphql';\n\nimport { updateRestaurant } from '../../graphql/mutations';\n\nimport { v4 as uuid } from 'uuid';\n\nimport classes from './EditRestaurant.module.css';\n\nconst EditRestaurant = (props) => {\n    const [logoEditorOpened, setLogoEditorOpened] = useState(false);\n    const [nameEditorOpened, setNameEditorOpened] = useState(false);\n\n    const [nameEditted, setNameEditted] = useState('');\n    const [logoEditted, setLogoEditted] = useState(null);\n\n    console.log('rendering EditRestaurant')\n\n    useEffect(() => {\n    }, [])\n\n    const EditNameButtonClickHandler = () => {\n        setNameEditorOpened(true);\n    }\n\n    const EditLogoButtonClickHandler = () => {\n        setLogoEditorOpened(true);\n    }\n\n    const NameChangeHandler = (event) => {\n        setNameEditted(event.target.value);\n    }\n\n    const LogoChangeHandler = (event) => {\n        setLogoEditted(event.target.files[0]);\n    }\n\n    const onNameEditConfirm = async() => {\n        if (nameEditted === '') {\n            return\n        }\n        const inputData = { id: props.restaurant.id, name: nameEditted }\n        console.log('onNameEditConfirm:', nameEditted);\n        console.log('restaurant id:', props.restaurant.id)\n        // update \n        try {\n            await API.graphql(graphqlOperation(updateRestaurant, { input: inputData }))\n            props.restaurantSetter((prevRestaurant) => {\n               return { ...prevRestaurant, name: nameEditted}\n            })\n            console.log('onNameEditConfirm Finished');\n        } catch (err) {\n            console.log('error updating restaurant name:', err);\n        }\n\n        setNameEditorOpened(false);\n    }\n    const onLogoEditConfirm = async() => {\n        if (!logoEditted) {\n            return\n        }\n        const extension = logoEditted.name.split(\".\")[1];\n        const { type: mimeType } = logoEditted;\n        const key = `${uuid()}${props.restaurant.name}.${extension}`;\n        const url = `https://${props.bucket}.s3.${props.region}.amazonaws.com/public/${key}`;\n        const inputData = { id: props.restaurant.id, logo: url }\n        //delete prev logo from bucket\n        try {\n            const deletedKey = props.restaurant.logo.replace(`https://${props.bucket}.s3.${props.region}.amazonaws.com/public/`, '');\n            await Storage.remove(deletedKey);\n        } catch (err) {\n            console.log('error deleting logo:', err);\n        }\n        // update \n        try {\n            await Storage.put(key, logoEditted, {contentType: mimeType});\n            await API.graphql(graphqlOperation(updateRestaurant, { input: inputData }))\n            props.restaurantSetter((prevRestaurant) => {\n                //return {name: prevRestaurant.name, logo: url}\n                return { ...prevRestaurant, logo: url }\n            })\n        } catch (err) {\n            console.log('error updating restaurant logo:', err);\n        }\n\n        setLogoEditorOpened(false);\n    }\n\n    const onNameEditCancel = () => {\n        setNameEditorOpened(false);\n        setNameEditted('');\n    }\n    const onLogoEditCancel = () => {\n        setLogoEditorOpened(false);\n        setLogoEditted(null);\n    }\n    \n    return (\n        <div className={classes.editRestaurant}>\n            {nameEditorOpened && (\n                <div>\n                    <div className={classes.backdrop} onClick={onNameEditCancel} />\n                    <div className={classes.editorContainer}>\n                        <div className={classes.editorText}>Restaurant Name:</div>\n                        <div className={classes.editorInputArea}>\n                            <input className={classes.editorInput} type='text' placeholder={props.restaurant.name} onChange={NameChangeHandler} />\n                            <button className={classes.editorButton} onClick={onNameEditConfirm}>Confirm</button>\n                            <button className={classes.editorButton} onClick={onNameEditCancel}>Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            )}\n            {logoEditorOpened && (\n                <div>\n                    <div className={classes.backdrop} onClick={onLogoEditCancel} />\n                    <div className={classes.editorContainer}>\n                        <div>New Logo: </div>\n                        <input type='file' onChange={LogoChangeHandler} />\n                        <button onClick={onLogoEditConfirm}>Confirm</button>\n                        <button onClick={onLogoEditCancel}>Cancel</button>\n                    </div>\n                </div>\n            )}\n            <div className={classes.content}>\n                <div className={classes.text}>\n                    Your Restaurant\n                </div>\n                <div className={classes.editArea}>\n                    <div className={classes.nameArea}>\n                        <div className={classes.restaurantName}>\n                            Restaurant Name\n                        </div>\n                        <div className={classes.name}>\n                            {props.restaurant.name}\n                        </div>\n                        <div className={classes.nameButton}>\n                            <button className={classes.button} onClick={EditNameButtonClickHandler}>edit</button>\n                        </div>\n                    </div>\n                    <hr size=\"1\" color=\"#6B2200\" className={classes.line}></hr>\n                    <div className={classes.logoArea}>\n                        <div className={classes.logoText}>\n                            Restaurant Logo\n                        </div>\n                        <div className={classes.logo}>\n                            <img className={classes.logosrc} src={props.restaurant.logo}></img>\n                        </div>\n                        <div className={classes.logobutton}>\n                            <button className={classes.button} onClick={EditLogoButtonClickHandler}>edit</button>\n                        </div> \n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default EditRestaurant;"]},"metadata":{},"sourceType":"module"}