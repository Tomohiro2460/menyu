{"ast":null,"code":"var _jsxFileName = \"/Users/nishimuratomohiro/Capstone2/capstone2/menyu/src/components/Pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { listRestaurants } from '../../graphql/queries';\nimport { getRestaurant } from '../../graphql/queries';\nimport { API } from '@aws-amplify/api';\nimport { graphqlOperation } from '@aws-amplify/api-graphql';\nimport { v4 as uuid } from 'uuid';\nimport classes from './Home.module.css';\nimport HomeHeader from '../Layout/HomeHeader';\nimport Footer from '../Layout/Footer';\nimport CreateRestaurant from '../Layout/CreateRestaurant';\nimport EditMenu from '../Layout/EditMenu';\nimport EditRestaurant from '../Layout/EditRestaurant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const bucket = props.bucket_info.bucket_name;\n  const region = props.bucket_info.bucket_region;\n  const [restaurant, setRestaurant] = useState({\n    id: '',\n    name: '',\n    logo: '',\n    categories: {\n      items: []\n    }\n  });\n  console.log('rendering Home');\n  useEffect(() => {\n    console.log(\"useEffect of Home called\");\n    fetchRestaurants();\n  }, []);\n\n  async function fetchRestaurants() {\n    try {\n      const restrantsData = await API.graphql(graphqlOperation(listRestaurants));\n      const restrants = restrantsData.data.listRestaurants.items;\n      const restrantByGetData = await API.graphql(graphqlOperation(getRestaurant, {\n        id: restrants[0].id\n      }));\n      console.log(\"Restaurant by Get\", restrantByGetData);\n      console.log('restrant id:', restrants[0].id);\n      console.log(\"from fetchRestrant\");\n      console.log(restrants);\n      setRestaurant(restrantByGetData.data.getRestaurant);\n    } catch (err) {\n      console.log('error fetching restrants', err);\n      setRestaurant(null);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(HomeHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hello, \", props.user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), restaurant ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EditRestaurant, {\n        bucket: bucket,\n        region: region,\n        restaurant: restaurant,\n        restaurantSetter: setRestaurant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(EditMenu, {\n        bucket: bucket,\n        region: region,\n        restaurant: restaurant,\n        restaurantSetter: setRestaurant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(CreateRestaurant, {\n      bucket: bucket,\n      region: region,\n      restaurantSetter: setRestaurant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"Xt9daLBaJ8NhKDWCnIszFlv7XvA=\");\n\n_c = Home;\nexport default Home;\n/*\nconst Home = (props) => {\n    const [nameState, setNameState] = useState('');\n    const [selectedLogo, setSelectedLogo] = useState(null);\n\n    const [restrants, setRestrants] = useState([]);\n\n    const bucket = props.bucket_info.bucket_name;\n    const region = props.bucket_info.bucket_region;\n\n    useEffect(() => {\n        fetchRestrants()\n    }, [])\n\n\n    async function fetchRestrants() {\n        try {\n          const restrantsData = await API.graphql(graphqlOperation(listRestrants))\n          const restrants = restrantsData.data.listRestrants.items\n          console.log(\"from fetchRestrant\");\n          console.log(restrants);\n          setRestrants(restrants);\n        } catch (err) { console.log('error fetching restrants') }\n    }\n\n\n\n    async function addRestrantHandler() {\n        if (!nameState || !selectedLogo) return\n        \n        //first add image to s3\n        const extension = selectedLogo.name.split(\".\")[1];\n        const { type: mimeType } = selectedLogo;\n        const key = `${uuid()}${nameState}.${extension}`\n        const url = `https://${bucket}.s3.${region}.amazonaws.com/public/${key}`;\n        const inputData = { name: nameState, image: url }\n        try {\n            await Storage.put(key, selectedLogo, {contentType: mimeType})\n            await API.graphql(graphqlOperation(createRestrant, { input: inputData }))\n\n            setNameState('');\n            setSelectedLogo(null);\n            setRestrants(() => {\n                return [...restrants, {name: nameState, image: url}]\n            })\n\n        } catch (err) {\n            console.log('error creating restrants:', err);\n        }\n    }\n\n\n    const nameChangeHandler = (event) => {\n        event.preventDefault();\n        setNameState(event.target.value);\n    }\n\n    const logoChangeHandler = (event) => {\n        setSelectedLogo(event.target.files[0]);\n    }\n\n\n\n    return (\n        <div>\n            <div>Hello, {props.user.username}</div>\n                <div>\n                    <input type='text' value={nameState} onChange={nameChangeHandler}/>\n                </div>\n                <div>\n                    <input type='file' onChange={logoChangeHandler} accept=\"image/png, image/jpeg\"/>\n                </div>\n                <button onClick={addRestrantHandler}>Add Restrant</button>\n                {\n                    restrants.map((restrant, index) => (\n                        <div key={restrant.id ? restrant.id : index}>\n                            <p>{restrant.name}</p>\n                            <img src={restrant.image}></img>\n                        </div>\n                    ))\n                }\n                <AmplifySignOut />\n        </div>\n    );\n}\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/nishimuratomohiro/Capstone2/capstone2/menyu/src/components/Pages/Home.js"],"names":["React","useEffect","useState","listRestaurants","getRestaurant","API","graphqlOperation","v4","uuid","classes","HomeHeader","Footer","CreateRestaurant","EditMenu","EditRestaurant","Home","props","bucket","bucket_info","bucket_name","region","bucket_region","restaurant","setRestaurant","id","name","logo","categories","items","console","log","fetchRestaurants","restrantsData","graphql","restrants","data","restrantByGetData","err","container","user","username"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { listRestaurants } from '../../graphql/queries';\nimport { getRestaurant } from '../../graphql/queries';\n\nimport { API } from '@aws-amplify/api';\nimport { graphqlOperation } from '@aws-amplify/api-graphql';\n\nimport {v4 as uuid} from 'uuid';\n\nimport classes from './Home.module.css'\nimport HomeHeader from '../Layout/HomeHeader';\nimport Footer from '../Layout/Footer';\n\n\nimport CreateRestaurant from '../Layout/CreateRestaurant';\nimport EditMenu from '../Layout/EditMenu';\nimport EditRestaurant from '../Layout/EditRestaurant';\n\nconst Home = (props) => {\n    const bucket = props.bucket_info.bucket_name;\n    const region = props.bucket_info.bucket_region;\n\n    const [restaurant, setRestaurant] = useState({id: '', name: '', logo: '', categories: {items: []}});\n\n    console.log('rendering Home');\n\n    useEffect(() => {\n        console.log(\"useEffect of Home called\")\n        fetchRestaurants()\n    }, [])\n\n    async function fetchRestaurants() {\n        try {\n          const restrantsData = await API.graphql(graphqlOperation(listRestaurants))\n          const restrants = restrantsData.data.listRestaurants.items\n          const restrantByGetData = await API.graphql(graphqlOperation(getRestaurant, {id: restrants[0].id}));\n          console.log(\"Restaurant by Get\", restrantByGetData);\n          console.log('restrant id:', restrants[0].id)\n          console.log(\"from fetchRestrant\");\n          console.log(restrants);\n          setRestaurant(restrantByGetData.data.getRestaurant);\n        } catch (err) {\n            console.log('error fetching restrants', err);\n            setRestaurant(null);\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <HomeHeader />\n            <div>Hello, {props.user.username}</div>\n            {\n                (restaurant) ? (\n                    <div>\n                        <EditRestaurant bucket={bucket} region={region} restaurant={restaurant} restaurantSetter={setRestaurant}/>\n                        <EditMenu bucket={bucket} region={region} restaurant={restaurant} restaurantSetter={setRestaurant} />\n                    </div>\n                ) : (\n                    <CreateRestaurant bucket={bucket} region={region} restaurantSetter={setRestaurant}/>\n                )\n            }\n            <Footer />\n        </div>\n    );\n}\n\nexport default Home;\n\n/*\nconst Home = (props) => {\n    const [nameState, setNameState] = useState('');\n    const [selectedLogo, setSelectedLogo] = useState(null);\n\n    const [restrants, setRestrants] = useState([]);\n\n    const bucket = props.bucket_info.bucket_name;\n    const region = props.bucket_info.bucket_region;\n\n    useEffect(() => {\n        fetchRestrants()\n    }, [])\n\n\n    async function fetchRestrants() {\n        try {\n          const restrantsData = await API.graphql(graphqlOperation(listRestrants))\n          const restrants = restrantsData.data.listRestrants.items\n          console.log(\"from fetchRestrant\");\n          console.log(restrants);\n          setRestrants(restrants);\n        } catch (err) { console.log('error fetching restrants') }\n    }\n\n\n\n    async function addRestrantHandler() {\n        if (!nameState || !selectedLogo) return\n        \n        //first add image to s3\n        const extension = selectedLogo.name.split(\".\")[1];\n        const { type: mimeType } = selectedLogo;\n        const key = `${uuid()}${nameState}.${extension}`\n        const url = `https://${bucket}.s3.${region}.amazonaws.com/public/${key}`;\n        const inputData = { name: nameState, image: url }\n        try {\n            await Storage.put(key, selectedLogo, {contentType: mimeType})\n            await API.graphql(graphqlOperation(createRestrant, { input: inputData }))\n\n            setNameState('');\n            setSelectedLogo(null);\n            setRestrants(() => {\n                return [...restrants, {name: nameState, image: url}]\n            })\n\n        } catch (err) {\n            console.log('error creating restrants:', err);\n        }\n    }\n\n\n    const nameChangeHandler = (event) => {\n        event.preventDefault();\n        setNameState(event.target.value);\n    }\n\n    const logoChangeHandler = (event) => {\n        setSelectedLogo(event.target.files[0]);\n    }\n\n\n\n    return (\n        <div>\n            <div>Hello, {props.user.username}</div>\n                <div>\n                    <input type='text' value={nameState} onChange={nameChangeHandler}/>\n                </div>\n                <div>\n                    <input type='file' onChange={logoChangeHandler} accept=\"image/png, image/jpeg\"/>\n                </div>\n                <button onClick={addRestrantHandler}>Add Restrant</button>\n                {\n                    restrants.map((restrant, index) => (\n                        <div key={restrant.id ? restrant.id : index}>\n                            <p>{restrant.name}</p>\n                            <img src={restrant.image}></img>\n                        </div>\n                    ))\n                }\n                <AmplifySignOut />\n        </div>\n    );\n}\n*/"]},"metadata":{},"sourceType":"module"}