{"ast":null,"code":"var _jsxFileName = \"/Users/nishimuratomohiro/Capstone2/capstone2/menyu/src/components/Layout/CreateRestaurant.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport Storage from '@aws-amplify/storage';\nimport API from '@aws-amplify/api';\nimport { graphqlOperation } from '@aws-amplify/api-graphql';\nimport { createRestaurant } from '../../graphql/mutations';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateRestaurant = props => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [logo, setLogo] = useState(null);\n\n  const nameChangeHandler = event => {\n    event.preventDefault();\n    setName(event.target.value);\n  };\n\n  const logoChangeHandler = event => {\n    event.preventDefault();\n    setLogo(event.target.files[0]);\n  };\n\n  const addRestaurantHandler = async () => {\n    if (name === '' || !logo) {\n      return;\n    }\n\n    const extension = logo.name.split(\".\")[1];\n    const {\n      type: mimeType\n    } = logo;\n    const key = `${uuid()}${name}.${extension}`;\n    const url = `https://${props.bucket}.s3.${props.region}.amazonaws.com/public/${key}`;\n    const inputData = {\n      name: name,\n      logo: url\n    };\n\n    try {\n      await Storage.put(key, logo, {\n        contentType: mimeType\n      });\n      const newRestaurant = await API.graphql(graphqlOperation(createRestaurant, {\n        input: inputData\n      }));\n      props.restaurantSetter({\n        id: newRestaurant.data.createRestaurant.id,\n        name: name,\n        logo: url\n      });\n      console.log('addRestaurantHandler: newly created restaurant:', newRestaurant);\n      console.log('addRestaurantHandler: newly created restaurant:', newRestaurant.data.createRestaurant.id);\n    } catch (err) {\n      console.log('error creating restaurant:', err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Create your Restaurant\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Restaurant Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: nameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Restaurant Logo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: logoChangeHandler,\n        accept: \"image/png, image/jpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addRestaurantHandler,\n      children: \"Add Restrant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateRestaurant, \"TUuN2a8dh8A1kXfowAZVskCsLZ0=\");\n\n_c = CreateRestaurant;\nexport default CreateRestaurant;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRestaurant\");","map":{"version":3,"sources":["/Users/nishimuratomohiro/Capstone2/capstone2/menyu/src/components/Layout/CreateRestaurant.js"],"names":["React","useState","Storage","API","graphqlOperation","createRestaurant","v4","uuid","CreateRestaurant","props","name","setName","logo","setLogo","nameChangeHandler","event","preventDefault","target","value","logoChangeHandler","files","addRestaurantHandler","extension","split","type","mimeType","key","url","bucket","region","inputData","put","contentType","newRestaurant","graphql","input","restaurantSetter","id","data","console","log","err"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nimport Storage from '@aws-amplify/storage';\nimport API from '@aws-amplify/api';\nimport { graphqlOperation } from '@aws-amplify/api-graphql';\nimport { createRestaurant } from '../../graphql/mutations';\n\nimport { v4 as uuid } from 'uuid';\n\nconst CreateRestaurant = (props) => {\n    const [name, setName] = useState('');\n    const [logo, setLogo] = useState(null);\n\n    const nameChangeHandler = (event) => {\n        event.preventDefault();\n        setName(event.target.value);\n    }\n\n    const logoChangeHandler = (event) => {\n        event.preventDefault();\n        setLogo(event.target.files[0]);\n    }\n\n    const addRestaurantHandler = async() => {\n        if (name === '' || !logo) {\n            return\n        }\n\n        const extension = logo.name.split(\".\")[1];\n        const { type: mimeType } = logo;\n        const key = `${uuid()}${name}.${extension}`;\n        const url = `https://${props.bucket}.s3.${props.region}.amazonaws.com/public/${key}`;\n        const inputData = { name: name, logo: url }\n        try {\n            await Storage.put(key, logo, {contentType: mimeType});\n            const newRestaurant = await API.graphql(graphqlOperation(createRestaurant, { input: inputData }))\n            props.restaurantSetter({id: newRestaurant.data.createRestaurant.id, name: name, logo: url});\n            console.log('addRestaurantHandler: newly created restaurant:' , newRestaurant);\n            console.log('addRestaurantHandler: newly created restaurant:' , newRestaurant.data.createRestaurant.id);\n        } catch (err) {\n            console.log('error creating restaurant:', err);\n        }\n    }\n    \n    return (\n        <div>\n            Create your Restaurant\n            <div>\n                Restaurant Name:\n                <input type='text' value={name} onChange={nameChangeHandler}/>\n            </div>\n            <div>\n                Restaurant Logo:\n                <input type='file' onChange={logoChangeHandler} accept=\"image/png, image/jpeg\"/>\n            </div>\n            <button onClick={addRestaurantHandler}>Add Restrant</button>\n        </div>\n\n    );\n}\n\nexport default CreateRestaurant;"]},"metadata":{},"sourceType":"module"}