{"ast":null,"code":"var _jsxFileName = \"/Users/nishimuratomohiro/Capstone2/capstone2/menyu/src/App.js\",\n    _s = $RefreshSig$();\n\n/* src/App.js */\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Welcome from './components/Pages/Welcome';\nimport Home from './components/Pages/Home';\nimport Menu from './components/Pages/Menu';\nimport AuthPage from './components/Pages/AuthPage';\nimport AuthProcessContext from './context/auth-process-context';\nimport Amplify, { Auth } from 'aws-amplify';\nimport { AmplifyAuthenticator } from '@aws-amplify/ui-react';\nimport { AuthState, onAuthUIStateChange } from '@aws-amplify/ui-components';\nimport awsconfig from './aws-exports';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAmplify.configure(awsconfig);\nconst S3_BUCKET_REGION = awsconfig.aws_user_files_s3_bucket_region;\nconst S3_BUCKET_NAME = awsconfig.aws_user_files_s3_bucket;\n/*\nconst client = new AWSAppSyncClient({\n  url: GRAPHQL_API_ENDPOINT_URL,\n  region: GRAPHQL_API_REGION,\n  auth: {\n    type: AUTH_TYPE,\n    // Get the currently logged in users credential.\n    jwtToken: async () => (await Auth.currentSession()).getAccessToken().getJwtToken(),\n  },\n  // Amplify uses Amazon IAM to authorize calls to Amazon S3. This provides the relevant IAM credentials.\n  complexObjectsCredentials: () => Auth.currentCredentials()\n});\n\n*/\n\nconst bucket_info = {\n  bucket_name: S3_BUCKET_NAME,\n  bucket_region: S3_BUCKET_REGION\n};\n\nconst App = () => {\n  _s();\n\n  const [authState, setAuthState] = useState();\n  const [user, setUser] = useState();\n  const [inAuthProcess, setInAuthProcess] = useState(false);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n\n  const signinHandler = () => {\n    setInAuthProcess(true);\n    setIsSigningUp(false);\n  };\n\n  const signupHandler = () => {\n    setInAuthProcess(true);\n    setIsSigningUp(true);\n  };\n\n  useEffect(() => {\n    return onAuthUIStateChange((nextAuthState, authData) => {\n      setAuthState(nextAuthState);\n      console.log(\"hello from onAuthUIStateChange\");\n      setUser(authData);\n    });\n  }, []);\n  useEffect(() => {\n    if (authState === AuthState.SignedIn) {\n      setInAuthProcess(false);\n      setIsSigningUp(false);\n    }\n  }, [authState]);\n  useEffect(() => {\n    fetchSession();\n  }, []);\n\n  const resetAuthState = () => {\n    setInAuthProcess(false);\n    setIsSigningUp(false);\n  };\n\n  async function fetchSession() {\n    try {\n      console.log('from fetchSession');\n      const session = await Auth.currentSession();\n      const authUser = await Auth.currentAuthenticatedUser();\n\n      if (session && authUser) {\n        console.log(\"here\");\n        setAuthState(AuthState.SignedIn);\n        setUser(authUser.username);\n      }\n\n      console.log(session);\n      console.log(authUser);\n    } catch (err) {\n      console.log(\"error fetching session\");\n    }\n  }\n  /*\n        <Home user={user} client={client} bucket_info={bucket_info}/>\n        */\n\n  /*\n  return authState === AuthState.SignedIn && user ? (\n   <Home user={user} bucket_info={bucket_info}/>\n  ) : (\n  <AuthProcessContext.Provider\n   value={{\n     onSignIn: signinHandler,\n     onSignUp: signupHandler,\n   }}\n  >\n   {!inAuthProcess && <Welcome />}\n   {inAuthProcess && \n     <AmplifyAuthenticator \n       initialAuthState={isSigningUp ? AuthState.SignUp : AuthState.SignIn }\n     ></AmplifyAuthenticator>\n   }\n  </AuthProcessContext.Provider>\n  );\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      exact: true,\n      children: authState === AuthState.SignedIn && user ? /*#__PURE__*/_jsxDEV(Home, {\n        user: user,\n        bucket_info: bucket_info\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(AuthProcessContext.Provider, {\n        value: {\n          onSignIn: signinHandler,\n          onSignUp: signupHandler\n        },\n        children: [!inAuthProcess && /*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 34\n        }, this), inAuthProcess && /*#__PURE__*/_jsxDEV(AuthPage, {\n          isSigningUp: isSigningUp,\n          onResetAuthState: resetAuthState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/menu/:restrantId\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RGYrv1c7ABB8F5qBPa/iwSJ83gQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nishimuratomohiro/Capstone2/capstone2/menyu/src/App.js"],"names":["React","useState","useEffect","Route","Switch","Redirect","Welcome","Home","Menu","AuthPage","AuthProcessContext","Amplify","Auth","AmplifyAuthenticator","AuthState","onAuthUIStateChange","awsconfig","configure","S3_BUCKET_REGION","aws_user_files_s3_bucket_region","S3_BUCKET_NAME","aws_user_files_s3_bucket","bucket_info","bucket_name","bucket_region","App","authState","setAuthState","user","setUser","inAuthProcess","setInAuthProcess","isSigningUp","setIsSigningUp","signinHandler","signupHandler","nextAuthState","authData","console","log","SignedIn","fetchSession","resetAuthState","session","currentSession","authUser","currentAuthenticatedUser","username","err","onSignIn","onSignUp"],"mappings":"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","sourcesContent":["/* src/App.js */\nimport React, { useState, useEffect } from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport Welcome from './components/Pages/Welcome';\nimport Home from './components/Pages/Home';\nimport Menu from './components/Pages/Menu';\nimport AuthPage from './components/Pages/AuthPage';\nimport AuthProcessContext from './context/auth-process-context';\n\nimport Amplify, { Auth } from 'aws-amplify';\n\nimport { AmplifyAuthenticator } from '@aws-amplify/ui-react';\nimport { AuthState, onAuthUIStateChange } from '@aws-amplify/ui-components';\nimport awsconfig from './aws-exports';\n\nAmplify.configure(awsconfig);\n\nconst S3_BUCKET_REGION = awsconfig.aws_user_files_s3_bucket_region\nconst S3_BUCKET_NAME = awsconfig.aws_user_files_s3_bucket\n\n/*\nconst client = new AWSAppSyncClient({\n  url: GRAPHQL_API_ENDPOINT_URL,\n  region: GRAPHQL_API_REGION,\n  auth: {\n    type: AUTH_TYPE,\n    // Get the currently logged in users credential.\n    jwtToken: async () => (await Auth.currentSession()).getAccessToken().getJwtToken(),\n  },\n  // Amplify uses Amazon IAM to authorize calls to Amazon S3. This provides the relevant IAM credentials.\n  complexObjectsCredentials: () => Auth.currentCredentials()\n});\n\n*/\nconst bucket_info = {bucket_name: S3_BUCKET_NAME, bucket_region: S3_BUCKET_REGION}\n\n\nconst App = () => {\n  const [authState, setAuthState] = useState();\n  const [user, setUser] = useState();\n\n  const [inAuthProcess, setInAuthProcess] = useState(false);\n  const [isSigningUp, setIsSigningUp] = useState(false);\n\n  const signinHandler = () => {\n    setInAuthProcess(true);\n    setIsSigningUp(false);\n  }\n\n  const signupHandler = () => {\n    setInAuthProcess(true);\n    setIsSigningUp(true);\n  }\n\n  useEffect(() => {\n      return onAuthUIStateChange((nextAuthState, authData) => {\n          setAuthState(nextAuthState);\n          console.log(\"hello from onAuthUIStateChange\");\n          setUser(authData)\n      });\n  }, []);\n\n  useEffect(() => {\n    if (authState === AuthState.SignedIn) {\n      setInAuthProcess(false);\n      setIsSigningUp(false);\n    }\n  },[authState]);\n\n  useEffect(() => {\n    fetchSession()\n  }, [])\n\n  const resetAuthState = () => {\n    setInAuthProcess(false);\n    setIsSigningUp(false);\n  }\n\n  async function fetchSession() {\n    try {\n      console.log('from fetchSession');\n      const session = await Auth.currentSession();\n      const authUser = await Auth.currentAuthenticatedUser();\n      if (session && authUser) {\n        console.log(\"here\")\n        setAuthState(AuthState.SignedIn);\n        setUser(authUser.username)\n      }\n      console.log(session);\n      console.log(authUser);\n    } catch(err) {\n      console.log(\"error fetching session\");\n    }\n  }\n\n  /*\n        <Home user={user} client={client} bucket_info={bucket_info}/>\n        */\n       /*\n    return authState === AuthState.SignedIn && user ? (\n        <Home user={user} bucket_info={bucket_info}/>\n    ) : (\n      <AuthProcessContext.Provider\n        value={{\n          onSignIn: signinHandler,\n          onSignUp: signupHandler,\n        }}\n      >\n        {!inAuthProcess && <Welcome />}\n        {inAuthProcess && \n          <AmplifyAuthenticator \n            initialAuthState={isSigningUp ? AuthState.SignUp : AuthState.SignIn }\n          ></AmplifyAuthenticator>\n        }\n      </AuthProcessContext.Provider>\n  );\n  */\n  return (\n    <Switch>\n      <Route path='/' exact>\n        {\n          (authState === AuthState.SignedIn && user ) ? (\n            <Home user={user} bucket_info={bucket_info} />\n          ) : (\n            <AuthProcessContext.Provider\n              value={{\n                onSignIn: signinHandler,\n                onSignUp: signupHandler,\n              }}\n            >\n              {!inAuthProcess && <Welcome />}\n              {inAuthProcess && <AuthPage isSigningUp={isSigningUp} onResetAuthState={resetAuthState}/>}\n            </AuthProcessContext.Provider>\n          )\n        }\n      </Route>\n      <Route path='/menu/:restrantId'>\n        <Menu />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}